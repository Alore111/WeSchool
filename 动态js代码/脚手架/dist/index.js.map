{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AAFA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAFA;;AAKA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAEA;;;;;AAKA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AADA;;AAIA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAFA;;AAKA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AAEA;AACA;;AAEA;;AAEA;AAAA;;AAGA;AACA;;;AAGA;AACA;AACA;AAFA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAEA;;;AAGA;AACA;AAAA;AAAA;;AAIA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AADA;;AAIA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;;AAKA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AA9hBA;AAkiBA;AACA","sources":["webpack://test/./dist/index.js"],"sourcesContent":["function runCode(){\n      \n  \n  var Page = function(page){\n    return page\n  }\nreturn Page({\n  \n  onLoad: function (options) {\n    options = this.options;\n    this.setdata({})\n  },\n  \n  parseTag(tag) {\n    let res = {\n        type1: \"tag\",\n        name: \"\",\n        voidElement: false,\n        // attrs: {},\n        children: [],\n    };\n    let tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/);\n    if (tagMatch) {\n        // 标签名称为正则匹配的第2项\n        res.type1 = tagMatch[1];\n        if (tag.charAt(tag.length - 2) === \"/\") {\n            // 判断tag字符串倒数第二项是不是 / 设置为空标签。 例子：<img/>\n            res.voidElement = true;\n        }\n    }\n    // 匹配所有的标签正则\n    let classList = tag.match(/\\s([^'\"/\\s><]+?)\\s*?=\\s*?(\".*?\"|'.*?')/g);\n  \n    if (classList) {\n      let style = ''\n        for (let i = 0; i < classList.length; i++) {\n            // 去空格再以= 分隔字符串  得到['属性名称','属性值']\n   \n            let c = classList[i].split(\"=\");\n            // c[1] = c[1].replace(/\\s*/g, \"\")\n            c[0] = c[0].replace(/\\s*/g, \"\")\n            // 循环设置属性\n            var lengthc = 2\n            for(lengthc; lengthc < c.length ; lengthc++){\n              c[1] += \"=\" + c[lengthc]\n            }\n            let p = c[1].substring(1, c[1].length - 1)\n            try{\n              p = JSON.parse(c[1].substring(1, c[1].length - 1))\n            }catch(e){\n             \n            }\n  \n            if (c[1]) {\n              if(c[0] === ' style'){\n                style = p + style\n                res[c[0]] = style\n              }else{\n                res[c[0]] = p\n              }\n      \n            };\n  \n        }\n    }\n    return res;\n  },\n  \n  parse(html) {\n    var that = this;\n    let result = [];\n    let current;\n    let level = -1;\n    let arr = [];\n    let tagRE = /<[a-zA-Z\\-\\!\\/](?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])*>/g;\n    html.replace(tagRE, function (tag, index) {\n        // 判断第二个字符是不是'/'来判断是否open\n        let isOpen = tag.charAt(1) !== \"/\";\n        // 获取标签末尾的索引\n        let start = index + tag.length;\n        // 标签之前的文本信息\n        let text = html.slice(start, html.indexOf(\"<\", start));\n  \n        let parent;\n        if (isOpen) {\n            level++;\n            // 设置标签属性\n            current = that.parseTag(tag);\n            // 判断是否为文本信息，是就push一个text children  不等于'  '\n            if (!current.voidElement && text.trim()) {\n                current[\"text\"] = text\n            }\n            // 如果我们是根用户，则推送新的基本节点\n            if (level === 0) {\n                result.push(current);\n            }\n            // 判断有没有上层，有就push当前标签\n            parent = arr[level - 1];\n            if (parent) {\n                parent.children.push(current);\n            }\n            // console.log(current)\n            arr[level] = current;\n        }\n        // 如果不是开标签，或者是空元素：</div><img>\n        if (!isOpen || current.voidElement) {\n            // level--\n            level--;\n        }\n    });\n    // console.log(result)\n    return result;\n  \n  },\nsetdata: function setdata(dictData) {\n  \n  for(var i in dictData){\n    this.data[i] = dictData[i]\n  }\n  var html = `<view  class=\"container\">  <view  class=\"home\" style=\"background-color: white; border-radius: 12rpx; margin-left: 2.6%; margin-top: 15rpx; width: 95%;\">  <view  class=\"home_title\" style=\"display: flex; height: 40px; margin-left: 15rpx; margin-top: 15rpx;\">  <view  class=\"title\" style=\"display: flex; height: 40px; margin-left: 15rpx; margin-top: 15rpx;\"> 首页按键  </view> <view  class=\"blank\" style=\"width: 50%;\">   </view> <view  class=\"manager\" bindtap=\"Manage\" style=\"${(typeof this.data.ismanage === \"object\" ? JSON.stringify( this.data.ismanage) : this.data.ismanage)}: ?; background-color: white; flex: auto; height: 20px; margin-right: 25rpx; margin-top: 15rpx; text-align: right;\"> ${(typeof this.data.manage_text === \"object\" ? JSON.stringify( this.data.manage_text) : this.data.manage_text)}  </view> ${(typeof this.data.ismanage === \"object\" ? JSON.stringify( this.data.ismanage) : this.data.ismanage) ? `<view  class=\"save\" bindtap=\"save\" style=\"display: flex; margin-right: 25rpx; margin-top: 15rpx;\"> 保存  </view> ` : ``} </view> <view  class=\"home_btn\">  <view  class=\"iconnBar_remove\" style=\"background-color: rgba(255, 255, 255, 0.7); border-radius: 20rpx; display: flex; flex-direction: row; flex-wrap: wrap; width: 710rpx;\">  <movable-area  class=\"moveArea\" style=\"background-color: rgba(255, 255, 255, 0.7); border-radius: 20rpx; display: flex; flex-direction: row; flex-wrap: wrap; height: ${(typeof this.data.itemWrapHeight === \"object\" ? JSON.stringify( this.data.itemWrapHeight) : this.data.itemWrapHeight)}px; margin-bottom: 15rpx; width: 710rpx;\">  ${(this.data.list).map((item, index) =>  `<movable-view  class=\"iconn\" wx:key=\"key\" id=\"${(typeof item.key === \"object\" ? JSON.stringify( item.key) : item.key)}\" x=\"${(typeof index === \"object\" ? JSON.stringify( index) : index)==(typeof this.data.cur === \"object\" ? JSON.stringify( this.data.cur) : this.data.cur)?(typeof this.data.tranX === \"object\" ? JSON.stringify( this.data.tranX) : this.data.tranX):(typeof item.tranX === \"object\" ? JSON.stringify( item.tranX) : item.tranX)}\" y=\"${(typeof index === \"object\" ? JSON.stringify( index) : index)==(typeof this.data.cur === \"object\" ? JSON.stringify( this.data.cur) : this.data.cur)?(typeof this.data.tranY === \"object\" ? JSON.stringify( this.data.tranY) : this.data.tranY):(typeof item.tranY === \"object\" ? JSON.stringify( item.tranY) : item.tranY)}\" direction=\"all\" disabled=\"${(typeof index === \"object\" ? JSON.stringify( index) : index)==(typeof this.data.cur === \"object\" ? JSON.stringify( this.data.cur) : this.data.cur)?(typeof this.data.disable === \"object\" ? JSON.stringify( this.data.disable) : this.data.disable):'true'}\" bind:longpress=\"longPress\" capture-catch:touchmove=\"touchMove\" catch:touchend=\"touchEnd\" friction=\"10000\" damping=\"1000\" style=\"height: calc(150rpx - 30rpx); padding-bottom: 10px; width: 20%;\">  <view  class=\"iconn_item\" id=\"${(typeof item.data.url === \"object\" ? JSON.stringify( item.data.url) : item.data.url)}\">  ${(typeof item.data.name === \"object\" ? JSON.stringify( item.data.name) : item.data.name)!=='更多' ? `<view >  <navigator  class=\"icon_item_url\" url=\"${(typeof this.data.ismanage === \"object\" ? JSON.stringify( this.data.ismanage) : this.data.ismanage)?'':(typeof item.data.url === \"object\" ? JSON.stringify( item.data.url) : item.data.url)}\" open-type=\"${(typeof item.data.type === \"object\" ? JSON.stringify( item.data.type) : item.data.type)==='tab跳转'?'switchTab':'navigate'}\" style=\"align-items: center; display: flex; flex-direction: column; justify-content: center; min-width: 120rpx;\">  <image  class=\"iconn_item_image\" src=\"${(typeof item.data.icon === \"object\" ? JSON.stringify( item.data.icon) : item.data.icon)}\" style=\"display: block; height: 80rpx; width: 80rpx;\">   </image> <text  class=\"iconn_name\" style=\"color: #888; display: block; font-size: 26rpx; line-height: 30rpx; margin-top: 10rpx; text-align: center;\"> ${(typeof item.data.name === \"object\" ? JSON.stringify( item.data.name) : item.data.name)}  </text>  </navigator> <view  bindtap=\"remove_click\" id=\"${(typeof index === \"object\" ? JSON.stringify( index) : index)}\">  ${(typeof this.data.ismanage === \"object\" ? JSON.stringify( this.data.ismanage) : this.data.ismanage) ? `<image  class=\"jianjian\" src=\"../../../images/zan.png\" style=\"height: 35rpx; position: absolute; right: 5rpx; top: 0rpx; width: 35rpx;\">   </image> ` : ``} </view>  </view> ` : ``}<view  class=\"icon_item_url\" style=\"align-items: center; display: flex; flex-direction: column; justify-content: center; min-width: 120rpx;\"wx:else=\"\">  <image  class=\"iconn_item_image\" src=\"${(typeof item.icon === \"object\" ? JSON.stringify( item.icon) : item.icon)}\" style=\"display: block; height: 80rpx; width: 80rpx;\">   </image> <text  class=\"iconn_name\" style=\"color: #888; display: block; font-size: 26rpx; line-height: 30rpx; margin-top: 10rpx; text-align: center;\"> ${(typeof item.name === \"object\" ? JSON.stringify( item.name) : item.name)}  </text>  </view>  </view>  </movable-view> `)} </movable-area>  </view>  </view>  </view> <view  class=\"other_btn\" style=\"background-color: white; border-radius: 12rpx; margin-left: 2.6%; margin-top: 25rpx; width: 95%;\">  <view  class=\"other_title\" style=\"margin-bottom: 15rpx; margin-left: 20rpx; padding-top: 15rpx;\"> 其余  </view> ${!(typeof this.data.other_iconList === \"object\" ? JSON.stringify( this.data.other_iconList) : this.data.other_iconList) ? `<view  class=\"other_message\" style=\"color: rgba(128, 128, 128, 0.507); margin-top: 100px; text-align: center;\"> 还没有多余的应用哦~~  </view> ` : ``}<view wx:else=\"\">  <view  class=\"iconn_add\" style=\"background-color: rgba(255, 255, 255, 0.7); border-radius: 20rpx; display: flex; flex-direction: row; flex-wrap: wrap; margin-bottom: 15px; width: 710rpx;\">  ${(this.data.other_iconList).map((item, index) =>  `<view  class=\"icon\" wx:key=\"key\" direction=\"all\" bindtap=\"${(typeof this.data.ismanage === \"object\" ? JSON.stringify( this.data.ismanage) : this.data.ismanage)?(typeof this.data.add_click === \"object\" ? JSON.stringify( this.data.add_click) : this.data.add_click):''}\" style=\"align-items: center; display: flex; flex-direction: column; height: calc(150rpx - 30rpx); justify-content: center; padding: 17rpx 0 10rpx 0; position: relative; width: 20%;\">  <view  class=\"icon_item\" id=\"${(typeof item.url === \"object\" ? JSON.stringify( item.url) : item.url)}\">  <navigator  class=\"icon_item_url\" url=\"${(typeof this.data.ismanage === \"object\" ? JSON.stringify( this.data.ismanage) : this.data.ismanage)?'':(typeof item.url === \"object\" ? JSON.stringify( item.url) : item.url)}\" open-type=\"${(typeof item.type === \"object\" ? JSON.stringify( item.type) : item.type)==='tab跳转'?'switchTab':'navigate'}\" style=\"align-items: center; display: flex; flex-direction: column; justify-content: center; min-width: 120rpx;\">  <image  class=\"icon_item_image\" src=\"${(typeof item.icon === \"object\" ? JSON.stringify( item.icon) : item.icon)}\" style=\"display: block; height: 80rpx; width: 80rpx;\">   </image> <text  class=\"iconn_name\" style=\"color: #888; display: block; font-size: 26rpx; line-height: 30rpx; margin-top: 10rpx; text-align: center;\"> ${(typeof item.name === \"object\" ? JSON.stringify( item.name) : item.name)}  </text>  </navigator> ${(typeof this.data.ismanage === \"object\" ? JSON.stringify( this.data.ismanage) : this.data.ismanage) ? `<view  bindtap=\"add_click\" id=\"${(typeof index === \"object\" ? JSON.stringify( index) : index)}\">  ${(typeof this.data.ismanage === \"object\" ? JSON.stringify( this.data.ismanage) : this.data.ismanage) ? `<image  class=\"jiajia\" src=\"../../../images/zan1.png\" style=\"height: 35rpx; position: absolute; right: 8rpx; top: 5rpx; width: 35rpx;\">   </image> ` : ``} </view> ` : ``} </view>  </view> `)} </view>  </view>  </view> <view  class=\"trail\" style=\"color: rgba(128, 128, 128, 0.603); margin-top: 40rpx; text-align: center;\"> 长按可排序  </view> <view  class=\"trail\" style=\"color: rgba(128, 128, 128, 0.603); margin-top: 40rpx; text-align: center;\"> We校园~~  </view>  </view> `\n  this.setData({html : this.parse(html)});\n},\n  \r\n    data: {\r\n        ismanage: false, //判别状态\r\n        manage_text: \"管理\",\r\n\r\n        before_IconList: [], //点击取消，还原之前的首页按钮数组\r\n        before_other_iconList: [], //点击取消，还原之前的其余按钮数组\r\n        iconList: [], //首页按钮\r\n        other_iconList: [], //其余按钮\r\n        inform: [],\r\n\r\n        //移动排序数据\r\n        disable: true, //判断是否移动\r\n        list: [],\r\n        //移动\r\n        itemTransition: false,\r\n        //列数、行数\r\n        columns: 5,\r\n        rows: 0,\r\n        //按钮框高度、宽度\r\n        itemWrapHeight: 0,\r\n        //itemWrapWidth: 0,\r\n    },\r\n\r\n    //界面初始，读取首页按钮缓存、其余按钮缓存\r\n    onShow: function (options) {\r\n        //从缓存中或取iconList\r\n        var that = this\r\n        var other_btn = wx.getStorageSync('other_btn')\r\n        that.setdata({\r\n            other_iconList: other_btn.other_iconList,\r\n            iconList: other_btn.iconList\r\n        })\r\n        this.init(); //按钮排序坐标初始化\r\n    },\r\n\r\n    //管理按钮，turn时触发移除、增加按钮；false时禁用\r\n    Manage: function () {\r\n        let init_other_iconList = JSON.parse(JSON.stringify(this.data.other_iconList))\r\n        let init_iconList = JSON.parse(JSON.stringify(this.data.list))\r\n\r\n        if (this.data.ismanage) {\r\n            this.setdata({\r\n                ismanage: false,\r\n                manage_text: \"管理\",\r\n                list: this.data._iconList,\r\n                // iconList: this.data.before_IconList,\r\n                other_iconList: this.data._other_iconList\r\n                // iconList:init_iconList,\r\n                // other_iconList:init_other_iconList\r\n            })\r\n            this.getWidth_Height()\r\n            //刷新按钮排序也可以用这个函数\r\n            this.getAfterRemove_Btn_Position(this.data.list);\r\n        } else {\r\n            this.setdata({\r\n                ismanage: true,\r\n                manage_text: \"取消\",\r\n                _iconList: init_iconList,\r\n                _other_iconList: init_other_iconList\r\n            })\r\n        }\r\n    },\r\n\r\n    //需求将obj这个对象拷贝出一个新对象修改新对象的值不会影响原对象的值\r\n    //定义一个函数\r\n\r\n    //移除按钮，把首页按键移除到其余按键\r\n    remove_click: function (e) {\r\n        var id = e.currentTarget.id\r\n        var arr = JSON.parse(JSON.stringify(this.data.list)) //上图标\r\n        var other_arr = JSON.parse(JSON.stringify(this.data.other_iconList)) //下图标\r\n        // console.log(arr,other_arr);\r\n\r\n        other_arr.push(arr[id].data)\r\n        arr.splice(id, 1)\r\n        // console.log(arr);\r\n\r\n        let list = this.getAfterRemove_Btn_Position(arr)\r\n\r\n        //console.log(list)\r\n\r\n        this.setdata({\r\n            other_iconList: other_arr,\r\n            list: list\r\n        })\r\n\r\n        this.getWidth_Height();\r\n    },\r\n\r\n    //增加按钮,把其余按键添加到首页按键\r\n    add_click: function (e) {\r\n        var id = e.currentTarget.id\r\n        var arr = JSON.parse(JSON.stringify(this.data.list))\r\n        var other_arr = JSON.parse(JSON.stringify(this.data.other_iconList))\r\n\r\n        let data = this.getAdd_Btn_Position(other_arr[id]);\r\n\r\n\r\n\r\n        arr.push(data)\r\n        other_arr.splice(id, 1)\r\n\r\n        arr.forEach((e, index) => {\r\n            if (e.data.name === '更多') {\r\n                arr[index] = arr.splice(arr.length - 1, 1, arr[index])[0];\r\n            }\r\n\r\n        })\r\n\r\n        this.setdata({\r\n            other_iconList: other_arr,\r\n            list: arr\r\n        })\r\n\r\n        this.getWidth_Height(); //根据按键数，更改按钮框体大小\r\n\r\n    },\r\n\r\n    //保存排序，回到初始状态\r\n    save: function () {\r\n        var that = this\r\n\r\n        //将list里面的data提取出来，赋值到iconList保存到手机内存上\r\n        let iconList = []\r\n        let list = that.data.list.forEach(item => {\r\n            //iconList.push(item.data)\r\n            //因为移动会打乱数据排序，为了保存打乱的数据排序，要用item.key\r\n            iconList[item.key] = item.data\r\n        })\r\n        //避免深存储无法更改数据\r\n        this.setdata({\r\n            iconList: iconList\r\n        })\r\n\r\n        var arr = JSON.parse(JSON.stringify(this.data.iconList)) //上图标\r\n        var other_arr = JSON.parse(JSON.stringify(this.data.other_iconList)) //下图标\r\n\r\n        //console.log(that.data.iconList)\r\n        let bb = {\r\n            other_iconList: that.data.other_iconList,\r\n            iconList: iconList,\r\n        }\r\n        wx.setStorageSync('other_btn', bb)\r\n        //回到初始状态\r\n        that.setdata({\r\n            ismanage: false,\r\n            manage_text: \"管理\",\r\n            _iconList: arr,\r\n            _other_iconList: other_arr\r\n        })\r\n    },\r\n\r\n    /**\r\n     *移动排序代码\r\n     *实现思路：\r\n     *一、初始化init()， \r\n     **/\r\n    init: function () {\r\n        let list = this.data.iconList.map((item, index) => {\r\n            let data = {\r\n                key: index,\r\n                tranX: 0,\r\n                tranY: 0,\r\n                data: item\r\n            }\r\n            return data\r\n        });\r\n        this.setdata({\r\n            list: list,\r\n        });\r\n\r\n        // 获取每一项的宽高等属性\r\n        this.createSelectorQuery().select(\".iconn\").boundingClientRect((res) => {\r\n\r\n            let rows = Math.ceil(this.data.list.length / this.data.columns); //获取行数\r\n\r\n            this.item = res;\r\n\r\n            this.getPosition(this.data.list, false);\r\n\r\n            let itemWrapHeight = rows * res.height;\r\n\r\n            //console.log(\"行数、按钮高度、按钮框体高度\", rows, res.height, itemWrapHeight);\r\n\r\n            \r\n            //let itemWrapWidth = this.data.columns * res.width;\r\n            //console.log(\"按钮框体高度、宽度\", itemWrapHeight, itemWrapWidth);\r\n\r\n            this.setdata({\r\n                itemWrapHeight: itemWrapHeight,\r\n                //itemWrapWidth: itemWrapWidth\r\n            });\r\n        }).exec();\r\n    },\r\n\r\n    /**\r\n     * 长按触发移动排序\r\n     */\r\n    longPress(e) {\r\n        //console.log(1111)\r\n        //长按直接触发管理事件manage\r\n        if (!this.data.ismanage) this.Manage();\r\n\r\n        let list = []\r\n\r\n        this.data.list.forEach((item) => {\r\n            list[item.key] = item\r\n        })\r\n\r\n        this.setdata({\r\n            list:list,\r\n            disable: false\r\n        });\r\n\r\n        //console.log(e)\r\n\r\n        this.startX = e.changedTouches[0].pageX\r\n        this.startY = e.changedTouches[0].pageY\r\n\r\n        let index = e.currentTarget.id;\r\n        //console.log(index)\r\n        //console.log(\"key\",this.data.list[index].key)\r\n\r\n        //console.log(\"long\",index)\r\n        if (this.data.columns === 1) { // 单列时候X轴初始不做位移\r\n            this.tranX = 0;\r\n        } else { // 多列的时候计算X轴初始位移, 使 item 水平中心移动到点击处\r\n            this.tranX = this.startX - this.item.width / 2 - 8;\r\n        }\r\n\r\n            // 计算Y轴初始位移, 使 item 垂直中心移动到点击处\r\n        this.tranY = this.startY - this.item.height / 2 - 40;\r\n\r\n        //console.log(\"计算后X/Y坐标\",this.tranX, this.tranY);\r\n\r\n        this.setdata({\r\n            cur: index,\r\n            //curZ: index,\r\n            tranX: this.tranX,\r\n            tranY: this.tranY,\r\n        });\r\n\r\n        wx.vibrateShort();\r\n    },\r\n    \r\n    touchMove(e) {\r\n        if (this.data.disable) return; //如果不可动，直接返回\r\n\r\n        //console.log(e)\r\n\r\n        let tranX = e.touches[0].pageX - this.startX + this.tranX,\r\n            tranY = e.touches[0].pageY - this.startY + this.tranY;\r\n\r\n        // let tranX = e.detail.x,\r\n        //     tranY = e.detail.y;\r\n        \r\n\r\n        this.setdata({\r\n            tranX: tranX,\r\n            tranY: tranY\r\n        });\r\n\r\n        //console.log(e);\r\n        //触发拖到事件时，setdata无法更改e.currentTarget.id，只能读取数组中的key\r\n        //否则会触发if (originKey == endKey || this.originKey == originKey) return;，结果无反应\r\n        let originKey = this.data.list[e.currentTarget.id].key;\r\n\r\n        //console.log(\"点击的index\", originKey)\r\n        let endKey = this.calculateMoving(tranX, tranY);\r\n        //console.log(e)\r\n        //console.log(\"id\",this.originKey,originKey,endKey)\r\n        //console.log(\"移动到的位置\", endKey)\r\n        // 防止拖拽过程中发生乱序问题\r\n        if (originKey == endKey || this.originKey == originKey) return;\r\n\r\n        this.originKey = originKey;\r\n\r\n        this.insert(originKey, endKey);\r\n    },\r\n\r\n    /**\r\n     * 根据当前的手指偏移量计算目标key\r\n     */\r\n    calculateMoving(tranX, tranY) {\r\n        let rows = Math.ceil(this.data.list.length / this.data.columns) - 1,\r\n            i = Math.round(tranX / this.item.width),\r\n            j = Math.round(tranY / this.item.height);\r\n\r\n        i = i > (this.data.columns - 1) ? (this.data.columns - 1) : i;\r\n        i = i < 0 ? 0 : i;\r\n\r\n        j = j < 0 ? 0 : j;\r\n        j = j > rows ? rows : j;\r\n\r\n        let endKey = i + this.data.columns * j;\r\n\r\n        endKey = endKey >= this.data.list.length ? this.data.list.length - 1 : endKey;\r\n\r\n        return endKey\r\n    },\r\n\r\n    touchEnd() {\r\n        if (this.data.disable) return;\r\n\r\n        this.clearData();\r\n    },\r\n\r\n    // /**\r\n    //  * 根据排序后 list 数据进行位移计算\r\n    //  */\r\n    getPosition(data, vibrate = true) {\r\n        let list = data.map((item, index) => {\r\n            item.tranX = this.item.width * (item.key % this.data.columns);\r\n            item.tranY = Math.floor(item.key / this.data.columns) * this.item.height;\r\n            // console.log(item.key)\r\n            //console.log(\"每个按钮的坐标\", item.tranX, item.tranY);\r\n            return item\r\n        });\r\n\r\n        this.setdata({\r\n            list: list\r\n        });\r\n\r\n        //console.log(\"list\",this.data.list)\r\n\r\n        if (!vibrate) return;\r\n\r\n        wx.vibrateShort();\r\n\r\n        //let listData = []\r\n        let iconListData = []\r\n\r\n        list.forEach((item) => {\r\n            //console.log(\"item\",item)\r\n            //listData[item.key] = item\r\n            iconListData[item.key] = item.data\r\n        });\r\n\r\n        this.setdata({\r\n            //list: listData,\r\n            iconList: iconListData\r\n        })\r\n    \r\n        //this.triggerEvent('change', {list: listData});\r\n     //console.log(\"list\",this.data.list)\r\n    },\r\n\r\n    //去除一个按键，重新计算其余按键排序\r\n    //刷新按钮坐标排序也可以用这个函数\r\n    getAfterRemove_Btn_Position(data) {\r\n        let list = data.map((item, index) => {\r\n            item.key = index\r\n            item.tranX = this.item.width * (item.key % this.data.columns);\r\n            item.tranY = Math.floor(item.key / this.data.columns) * this.item.height;\r\n            return item\r\n        });\r\n\r\n        return list\r\n    },\r\n\r\n    //增加一个按键，需计算其的位置x、y，直接调用init造成渲染重复\r\n    getAdd_Btn_Position(data) {\r\n        console.log(this.data.list.length)\r\n        let list = {\r\n            data: data,\r\n            key: this.data.list.length,\r\n            tranX: this.item.width * (this.data.list.length % this.data.columns),\r\n            tranY: Math.floor(this.data.list.length / this.data.columns) * this.item.height\r\n        };\r\n\r\n        return list\r\n    },\r\n\r\n\r\n    //根据按键数，更改按钮框体大小\r\n    getWidth_Height: function () {\r\n        let rows = Math.ceil(this.data.list.length / this.data.columns); //获取行数\r\n\r\n        let itemWrapHeight = rows * this.item.height;\r\n\r\n        let itemWrapWidth = this.data.columns * this.item.width;\r\n\r\n        this.setdata({\r\n            itemWrapHeight: itemWrapHeight,\r\n            itemWrapWidth: itemWrapWidth\r\n        });\r\n    },\r\n\r\n    insert: function (origin, end) {\r\n        let list\r\n        if (origin < end) {\r\n            list = this.data.list.map((item) => {\r\n                //console.log(\"item\",item)\r\n                if (item.key > origin && item.key <= end) {\r\n                    item.key = item.key - 1;\r\n                } else if (item.key == origin) {\r\n                    item.key = end;\r\n                }\r\n                return item\r\n            });\r\n            this.getPosition(list);\r\n        } else if (origin > end) {\r\n            list = this.data.list.map((item) => {\r\n                if (item.key >= end && item.key < origin) {\r\n                    item.key = item.key + 1;\r\n                } else if (item.key == origin) {\r\n                    item.key = end;\r\n                }\r\n                return item\r\n            });\r\n            this.getPosition(list);\r\n        }\r\n    },\r\n    /**\r\n     * 清除参数\r\n     */\r\n    clearData() {\r\n        this.originKey = -1;\r\n\r\n        this.setdata({\r\n            disable: true,\r\n            cur: -1,\r\n            tranX: 0,\r\n            tranY: 0\r\n        });\r\n    }\r\n})\n\n\n}\n  window.exports = runCode;\n\n  "],"names":[],"sourceRoot":""}