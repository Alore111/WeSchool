{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AADA;;AAIA;;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;;AAGA;;;AAGA;AACA;AACA;;AAFA;;AAMA;;;AAGA;AAAA;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AAFA;AADA;AAOA;AACA;AADA;;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAPA;AASA;;AAtLA;AA4LA;AACA","sources":["webpack://test/./dist/index.js"],"sourcesContent":["function runCode(){\n    const db = wx.cloud.database({\n  env: 'mall-7gi19fir46652cb4'\n})\n\nconst _ = db.command\n\n  \n  \n  var Page = function(page){\n    return page\n  }\nreturn Page({\n  \n  parseTag(tag) {\n    let res = {\n        type1: \"tag\",\n        name: \"\",\n        voidElement: false,\n        // attrs: {},\n        children: [],\n    };\n    let tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/);\n    if (tagMatch) {\n        // 标签名称为正则匹配的第2项\n        res.type1 = tagMatch[1];\n        if (tag.charAt(tag.length - 2) === \"/\") {\n            // 判断tag字符串倒数第二项是不是 / 设置为空标签。 例子：<img/>\n            res.voidElement = true;\n        }\n    }\n    // 匹配所有的标签正则\n    let classList = tag.match(/\\s([^'\"/\\s><]+?)\\s*?=\\s*?(\".*?\"|'.*?')/g);\n  \n    if (classList) {\n      let style = ''\n        for (let i = 0; i < classList.length; i++) {\n            // 去空格再以= 分隔字符串  得到['属性名称','属性值']\n   \n            let c = classList[i].split(\"=\");\n            // c[1] = c[1].replace(/\\s*/g, \"\")\n            c[0] = c[0].replace(/\\s*/g, \"\")\n            // 循环设置属性\n            var lengthc = 2\n            for(lengthc; lengthc < c.length ; lengthc++){\n              c[1] += \"=\" + c[lengthc]\n            }\n            let p = c[1].substring(1, c[1].length - 1)\n            try{\n              p = JSON.parse(c[1].substring(1, c[1].length - 1))\n            }catch(e){\n             \n            }\n  \n            if (c[1]) {\n              if(c[0] === ' style'){\n                style = p + style\n                res[c[0]] = style\n              }else{\n                res[c[0]] = p\n              }\n      \n            };\n  \n        }\n    }\n    return res;\n  },\n  \n  parse(html) {\n    var that = this;\n    let result = [];\n    let current;\n    let level = -1;\n    let arr = [];\n    let tagRE = /<[a-zA-Z\\-\\!\\/](?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])*>/g;\n    html.replace(tagRE, function (tag, index) {\n        // 判断第二个字符是不是'/'来判断是否open\n        let isOpen = tag.charAt(1) !== \"/\";\n        // 获取标签末尾的索引\n        let start = index + tag.length;\n        // 标签之前的文本信息\n        let text = html.slice(start, html.indexOf(\"<\", start));\n  \n        let parent;\n        if (isOpen) {\n            level++;\n            // 设置标签属性\n            current = that.parseTag(tag);\n            // 判断是否为文本信息，是就push一个text children  不等于'  '\n            if (!current.voidElement && text.trim()) {\n                current[\"text\"] = text\n            }\n            // 如果我们是根用户，则推送新的基本节点\n            if (level === 0) {\n                result.push(current);\n            }\n            // 判断有没有上层，有就push当前标签\n            parent = arr[level - 1];\n            if (parent) {\n                parent.children.push(current);\n            }\n            // console.log(current)\n            arr[level] = current;\n        }\n        // 如果不是开标签，或者是空元素：</div><img>\n        if (!isOpen || current.voidElement) {\n            // level--\n            level--;\n        }\n    });\n    // console.log(result)\n    return result;\n  \n  },\nsetdata: function setdata(dictData) {\n  \n  for(var i in dictData){\n    this.data[i] = dictData[i]\n  }\n  var html = `<view  class=\"flex justify-center bg-red \" style=\"undefined;${this.data.dark === 'dark' ? '    filter: invert(90%) !important;    /* background-color: #fff; */  ' : ''}\">  <view  class=\"action\">  <text > 西城暂时没有，官渡1,3,4送上宿舍，2,5宿舍楼下！  </text>  </view>  </view> <view  class=\"flex justify-center bg-red \" style=\"undefined;${this.data.dark === 'dark' ? '    filter: invert(90%) !important;    /* background-color: #fff; */  ' : ''}\">  <view  class=\"action\">  <text > 统一配送！！问题反馈微信：miao_08-31  </text>  </view>  </view> <view  class=\"flex justify-center bg-red \" style=\"undefined;${this.data.dark === 'dark' ? '    filter: invert(90%) !important;    /* background-color: #fff; */  ' : ''}\">  <view  class=\"action\">  <text > 下单时间为10:00-12:30 16:30-18:30\n      20:00-21:40  </text>  </view>  </view> <view  class=\"bg-white ss\" style=\"align-items: center; display: flex; flex-direction: row; font-size: 28rpx; height: 80rpx; padding-left: 20rpx;\">  搜店铺或想吃(例如奶茶): <input  class=\"input\" bindinput=\"ss\" style=\"background-color: #e7e6e6; border-radius: 20rpx; height: 50rpx; margin-left: 20rpx; padding-left: 20rpx; width: 400rpx;\">   </input>  </view> <view  class=\"cu-bar bg-white solid-bottom\">  <view  class=\"action\" style=\"margin-left: -300rpx\">  <text  class=\"cuIcon-title text-blue\">   </text> <text > 店铺介绍  </text>  </view> <view  class=\"action\">  <view  bindtap=\"goin\" class=\"action\" url=\"design\" hover-class=\"none\" style=\"padding-left: 20rpx;\">  <text  class=\"cuIcon-skinfill\">   </text> <text  class=\"text-df\"> 广油生活  </text>  </view>  </view>  </view> <view  class=\"cu-card article\" :class=\"isCard?\">  ${(this.data.shop_m).map((item, index) =>  `<view  id=\"${(typeof item.mini_id === \"object\" ? JSON.stringify( item.mini_id) : item.mini_id)}\" bindtap=\"goin\" class=\"cu-item shadow\">  <view  class=\"title\">  <view  class=\"text-cut\"> ${(typeof item.name === \"object\" ? JSON.stringify( item.name) : item.name)}  </view>  </view> <view  class=\"content\">  <image  src=\"${(typeof item.src === \"object\" ? JSON.stringify( item.src) : item.src)}\" mode=\"aspectFill\">   </image> <view  class=\"desc\">  <view  class=\"text-content\">  ${(typeof item.Introduction === \"object\" ? JSON.stringify( item.Introduction) : item.Introduction)}\n\n\n             <view  style=\"word-wrap:break-word;opacity: 0.6; font-size: 26rpx; padding-top:7rpx ;${this.data.dark === 'dark' ? '    filter: invert(96%) !important;    /* background-color: #fff; */  ' : ''}\" class=\"text-red\"> \n              ${(typeof item.prompt === \"object\" ? JSON.stringify( item.prompt) : item.prompt)}\n              </view>  </view> <view >  <view  class=\"cu-tag bg-red light sm round\" style=\"undefined;${this.data.dark === 'dark' ? '    filter: invert(90%) !important;    background-color: #000;  ' : ''}\"> ${(typeof item.label1 === \"object\" ? JSON.stringify( item.label1) : item.label1)}  </view> <view  class=\"cu-tag bg-green light sm round\" style=\"undefined;${this.data.dark === 'dark' ? '    filter: invert(90%) !important;    background-color: #000;  ' : ''}\"> ${(typeof item.label2 === \"object\" ? JSON.stringify( item.label2) : item.label2)}  </view>  </view>  </view>  </view>  </view> `)} </view> `\n  this.setData({html : this.parse(html)});\n},\n  \n\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    shop_m: [],\n    item: {}\n\n  },\n\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function (options) {options = this.options; this.data.dark =wx.getSystemInfoSync().theme; wx.onThemeChange(e => {console.log(e.theme);this.setdata({dark: e.theme})}); this.setdata();\n    var that = this;\n    wx.showLoading({\n      title: '加载中...',\n      mask: true\n    });\n    db.collection('shop_m').orderBy('sort', 'desc').get().then(res => {\n      that.setdata({\n        shop_m: res.data\n      })\n      console.log(that.data.shop_m)\n      wx.hideLoading({})\n\n    })\n  },\n\n  ss: function (e) {\n    var that = this;\n    console.log(e.detail.value)\n    db.collection('shop_m').where(_.or([{\n        name: db.RegExp({\n          regexp: e.detail.value,\n          options: 'i',\n        })\n      },\n      {\n        Introduction: db.RegExp({\n          regexp: e.detail.value,\n          options: 'i',\n        })\n      }\n    ])).orderBy('sort', 'desc').get().then(res => {\n      that.setdata({\n        shop_m: res.data\n      })\n\n      wx.hideLoading({})\n    })\n\n  },\n  goin: function (e) {\n    console.log(e)\n    wx.navigateToMiniProgram({\n      appId: e.currentTarget.id,\n      path: '',\n      envVersion: 'release',\n      success(res) {\n\n        console.log('跳转成功');\n      },\n    })\n  },\n\n\n})\n\n\n}\n  window.exports = runCode;\n\n  "],"names":[],"sourceRoot":""}